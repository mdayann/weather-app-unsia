components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    WeatherErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        stack:
          type: string

    Coord:
      type: object
      properties:
        lon:
          type: number
        lat:
          type: number

    Weather:
      type: object
      properties:
        id:
          type: integer
        main:
          type: string
        description:
          type: string
        icon:
          type: string

    Main:
      type: object
      properties:
        temp:
          type: number
        feels_like:
          type: number
        temp_min:
          type: number
        temp_max:
          type: number
        pressure:
          type: integer
        humidity:
          type: integer
        sea_level:
          type: integer
        grnd_level:
          type: integer
        temp_fh:
          type: number
        feels_like_fh:
          type: number
        temp_min_fh:
          type: number
        temp_max_fh:
          type: number

    Wind:
      type: object
      properties:
        speed:
          type: number
        deg:
          type: integer
        gust:
          type: number

    Clouds:
      type: object
      properties:
        all:
          type: integer

    Sys:
      type: object
      properties:
        type:
          type: integer
        id:
          type: integer
        country:
          type: string
        sunrise:
          type: integer
        sunset:
          type: integer

    WeatherResponse:
      type: object
      properties:
        coord:
          $ref: '#/components/schemas/Coord'
        weather:
          type: array
          items:
            $ref: '#/components/schemas/Weather'
        base:
          type: string
        main:
          $ref: '#/components/schemas/Main'
        visibility:
          type: integer
        wind:
          $ref: '#/components/schemas/Wind'
        clouds:
          $ref: '#/components/schemas/Clouds'
        dt:
          type: integer
        sys:
          $ref: '#/components/schemas/Sys'
        timezone:
          type: integer
        id:
          type: integer
        name:
          type: string
        cod:
          type: integer

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    WeatherError:
      description:  Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WeatherErrorResponse'
          example:
            code: 503
            message: Service Unavailable
            stack: 'Error: Error getting weather data'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
